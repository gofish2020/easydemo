syntax = "proto3";

package proto;

// go_package 的含义：  {输出目录};{编译后的 *.go文件的【package包名】}  
// {输出目录} 含义： 
// 1. 编译成的 *.go 文件的存储路径 （同时需要配合 --go_out=module=easydemo:. 编译配置解读,为了去掉easydemo）
// 2. 作为 go package的时候，import的路径
option go_package = "easydemo/proto/hellopb;hellopb";


// 要引用的proto文件的路径， 需要结合编译的 -I 参数，一起组成绝对路径 
import "proto/raft.proto";

service Hello{
    rpc send(proto.RaftMessage) returns(proto.RaftMessage) {}
}